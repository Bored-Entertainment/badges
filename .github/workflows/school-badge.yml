name: Schoolground Badges
on:
  schedule: [{cron: "0 0 1/2 * *"}]
jobs:
  create-day-badge:
      name: Create Day Badge
      runs-on: ubuntu-latest
      steps:
        - name: Checkout 🛎️
          uses: actions/checkout@v2
          with:
            persist-credentials: false
        
        - name: Sigin to git
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            
        - name: Fetch API Data 📦
          run: curl https://data.jsdelivr.com/v1/package/gh/Bored-Entertainment/Schoolgrounds/stats/version/day > day.json
          
        - name: Read Data From Json 📚
          id: read-data
          uses: notiz-dev/github-action-json-property@release
          with: 
            path: 'day.json'
            prop_path: 'total'
            
        - name: Remove old Badge
          run: |
            git rm school/day.svg
            git commit -m "remove school/day.svg"
            
        - name: Generate the badge SVG image
          uses: emibcn/badge-action@v1
          id: badge
          with:
            label: 'cdn.schgnd.ml'
            status: ${{ steps.read-data.outputs.prop }} hits/today
            color: 'orange'
            path: ./school/day.svg
            
        - name: Upload badge as artifact
          uses: actions/upload-artifact@v2
          with:
            name: badge
            path: ./school/day.svg
            if-no-files-found: error

        - name: Extract branch name
          shell: bash
          run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          id: extract_branch
          
        - name: Commit badge
          env:
            BADGE: ./school/day.svg
          run: |
            git add "${BADGE}"
            git commit -m "School Update Daily Badge"
            
        - name: Push badge commit
          uses: ad-m/github-push-action@master
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: ${{ steps.extract_branch.outputs.branch }}
  create-monthly-badge:
    needs: create-day-badge
    name: Create Monthly Badge
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Sigin to git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull
      - name: Fetch API Data 📦
        run: curl https://data.jsdelivr.com/v1/package/gh/Bored-Entertainment/Schoolgrounds/stats/version/month > month.json

      - name: Read Data From Json 📚
        id: read-data
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'month.json'
          prop_path: 'total'

      - name: Remove old Badge
        run: |
          git rm school/month.svg
          git commit -m "remove school/month.svg"
      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v1
        id: badge
        with:
          label: 'cdn.schgnd.ml'
          status: ${{ steps.read-data.outputs.prop }} hits/today
          color: 'orange'
          path: ./school/month.svg
          
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
          
      - name: Commit badge
        env:
          BADGE: ./school/month.svg
        run: |
          git add "${BADGE}"
          git commit -m "School Update Monthly Badge"
            
      - name: Push badge commit
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.extract_branch.outputs.branch }}
            
  create-weekly-badge:
    needs: create-monthly-badge
    name: Create Weekly Badge
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Sigin to git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull
      - name: Fetch API Data 📦
        run: curl https://data.jsdelivr.com/v1/package/gh/Bored-Entertainment/Schoolgrounds/stats/version/week > week.json

      - name: Read Data From Json 📚
        id: read-data
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'week.json'
          prop_path: 'total'

      - name: Remove old Badge
        run: |
          git rm school/week.svg
          git commit -m "remove school/week.svg"
      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v1
        id: badge
        with:
          label: 'cdn.schgnd.ml'
          status: ${{ steps.read-data.outputs.prop }} hits/today
          color: 'orange'
          path: ./school/week.svg
          
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
          
      - name: Commit badge
        env:
          BADGE: ./school/week.svg
        run: |
          git add "${BADGE}"
          git commit -m "School Update Weekly Badge"
            
      - name: Push badge commit
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.extract_branch.outputs.branch }}
          
  create-year-badge:
    needs: create-weekly-badge
    name: Create Year Badge
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Sigin to git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull
      - name: Fetch API Data 📦
        run: curl https://data.jsdelivr.com/v1/package/gh/Bored-Entertainment/Schoolgrounds/stats/version/year > year.json

      - name: Read Data From Json 📚
        id: read-data
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'year.json'
          prop_path: 'total'

      - name: Remove old Badge
        run: |
          git rm school/year.svg
          git commit -m "remove school/year.svg"
      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v1
        id: badge
        with:
          label: 'cdn.schgnd.ml'
          status: ${{ steps.read-data.outputs.prop }} hits/today
          color: 'orange'
          path: ./school/year.svg
          
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
          
      - name: Commit badge
        env:
          BADGE: ./school/year.svg
        run: |
          git add "${BADGE}"
          git commit -m "School Update Year Badge"
            
      - name: Push badge commit
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.extract_branch.outputs.branch }}
          
  loc:
    needs: create-year-badge
    runs-on: ubuntu-latest
    name: Line of Code
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      
      - name: Sigin to git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull
      
      - name: Remove old Badge
        run: |
          git rm school/loc.svg
          git commit -m "remove school/loc.svg"
      
      - name: install tokei
        run: "cargo install --git https://github.com/XAMPPRocky/tokei.git tokei"
        
      - name: cloning schoolgroudns
        run: "git clone https://github.com/Bored-Entertainment/Schoolgrounds.git"

      - name: tokei 
        run: tokei schoolgrounds --output json > loc.json
      - run: cat loc.json
      
      - name: Read Data From Json
        id: read-data
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'loc.json'
          prop_path: 'Total.code'
            
      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v1
        id: badge
        with:
          label: 'total lines'
          status: ${{ steps.read-data.outputs.prop }}
          color: 'orange'
          path: ./school/loc.svg

      - name: Upload badge as artifact
        uses: actions/upload-artifact@v2
        with:
          name: badge
          path: ./school/loc.svg
          if-no-files-found: error

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
        
      - name: Commit badge
        env:
          BADGE: ./school/loc.svg
        run: |
          git add "${BADGE}"
          git commit -m "School Update LOC Badge"
          
      - name: Push badge commit
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.extract_branch.outputs.branch }}
